<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Simone Vellei - Blog</title><link>https://simonevellei.com/en/</link><description>This is my cool site</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>henomis@gmail.com (Simone Vellei)</managingEditor><webMaster>henomis@gmail.com (Simone Vellei)</webMaster><copyright>Â© 2025 Simone Vellei. All rights reserved.</copyright><lastBuildDate>Sun, 07 Sep 2025 17:00:32 +0200</lastBuildDate><atom:link href="https://simonevellei.com/en/index.xml" rel="self" type="application/rss+xml"/><item><title>NATS as broker for my home server</title><link>https://simonevellei.com/en/nats-as-broker-for-my-home-server/</link><pubDate>Sun, 07 Sep 2025 17:00:32 +0200</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/nats-as-broker-for-my-home-server/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/pollenium04.png" referrerpolicy="no-referrer">
            </div><p>One of my childhood memories is tied to my auntâ€™s habit of making pizza dough. It was her favorite way to relax. This might seem normal, except that she was a baker by profession. How ironic, isnâ€™t it? The very job that could be a source of stress became her way to unwind. The funny thing is, after becoming a software developer, I found myself in the exact same situation. I love to code, but sometimes I need to do it to relax. And that&rsquo;s exactly what happened when I started to develop my home server.</p>]]></description></item><item><title>Running NATS on a FreeBSD Jail</title><link>https://simonevellei.com/en/running-nats-on-a-freebsd-jail/</link><pubDate>Wed, 01 Jan 2025 15:26:03 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/running-nats-on-a-freebsd-jail/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/nats001.png" referrerpolicy="no-referrer">
            </div><p>Last few months I played with FreeBSD and my Rock64 embedded boards [<a href="https://simonevellei.com/blog/posts/freebsd-on-a-rock64-board/" target="_blank" rel="noopener noreffer ">1</a>] [<a href="https://simonevellei.com/blog/posts/netbsd-on-a-rock64-board/" target="_blank" rel="noopener noreffer ">2</a>]. I really enjoyed the experience and I wanted to go to the next level and experiment with FreeBSD jails. I was surprised how easy (and logical) it was to create and manage an isolated environment. I also noticed that the low level commands have been wrapped into a more user friendly interfaces (like <code>bastille</code>) making the whole experience more enjoyable. To have a real example of a microservice running on a jail, I decided to try with <a href="https://nats.io" target="_blank" rel="noopener noreffer ">NATS</a>.</p>]]></description></item><item><title>3 years of remote work, 12 lessons learned</title><link>https://simonevellei.com/en/3-anni-da-remoto-12-lezioni-imparate/</link><pubDate>Fri, 15 Nov 2024 10:26:41 +0000</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/3-anni-da-remoto-12-lezioni-imparate/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/smartworking07.jpg" referrerpolicy="no-referrer">
            </div><div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>This post was originally written in Italian and translated using AI. If you notice any translation errors or unclear passages, please let me know.</p>
<p><a href="/3-anni-da-remoto-12-lezioni-imparate/" rel="">ðŸ‡®ðŸ‡¹ Read the original post in Italian</a></p>
</div>
        </div>
    </div>
<p>I have always dreamed of working remotely. The ability to manage my own time, work from anywhere, and better balance personal and professional life seemed like <strong>a utopia</strong> until a few years ago. To be clear, there were pioneering countries, like the <strong>United States</strong>, where remote work is now an established reality, or the <strong>Scandinavian countries</strong>, where workplace flexibility is a widespread practice. But in <strong>Italy</strong>, until just a few years ago, remote work was considered a true <strong>taboo</strong>. The reasons? Iâ€™ve spent my entire professional life asking myself this <strong>question</strong>, and in the Italian context, the main answer has always been the same: the <strong>cultural factor</strong>.</p>]]></description></item><item><title>NetBSD on a ROCK64 Board</title><link>https://simonevellei.com/en/netbsd-on-a-rock64-board/</link><pubDate>Sat, 09 Nov 2024 22:00:32 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/netbsd-on-a-rock64-board/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/rock64-008.jpg" referrerpolicy="no-referrer">
            </div><p>This is the sequel to the previous post <a href="https://simonevellei.com/blog/posts/freebsd-on-a-rock64-board/" target="_blank" rel="noopener noreffer ">FreeBSD on a ROCK64 Board</a>. Long story short, I had the chance to resurrect 4 single-board computers that were collecting dust in my office. I decided to install FreeBSD on one of them and it was a success. This time I will show you how and why I installed NetBSD on a second ROCK64 board.</p>
<h2 id="lets-add-connectivity-to-the-freebsd-board">Let&rsquo;s add connectivity to the FreeBSD board</h2>
<p>The process I described in the previous post was fun and I learned a lot. However, I used a USB-to-serial adapter to connect to the board, and even though it was fine to complete the installation, I wanted to have a more comfortable way to connect to the board.</p>]]></description></item><item><title>FreeBSD on a ROCK64 Board</title><link>https://simonevellei.com/en/freebsd-on-a-rock64-board/</link><pubDate>Fri, 01 Nov 2024 16:37:37 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/freebsd-on-a-rock64-board/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/rock64-004.png" referrerpolicy="no-referrer">
            </div><p>This is a story about an embedded board and a BSD system. The title could have been &ldquo;How to resurrect a forgotten board and fall in love with BSD operating systems, again&rdquo;.
It all started 6 years ago when I bought 4 Pine Rock64 boards, with a well planned project in my mind. Each board was equipped with a Rockchip RK3328 quad-core ARM Cortex A53 64-Bit processor, 4GB of RAM, 32GB of eMMC storage, and a Gigabit Ethernet port.</p>]]></description></item><item><title>Anthropic's Claude Integration with Go and Lingoose</title><link>https://simonevellei.com/en/anthropic-claude-integration-with-go-and-lingoose/</link><pubDate>Tue, 26 Mar 2024 15:51:58 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/anthropic-claude-integration-with-go-and-lingoose/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/lingoose003.png" referrerpolicy="no-referrer">
            </div><p>In the ever-changing world of artificial intelligence, a new AI assistant called <a href="https://claude.ai/" target="_blank" rel="noopener noreffer ">Claude</a> has arrived on the scene, and it&rsquo;s turning heads. Created by a company called <a href="https://anthropic.com/" target="_blank" rel="noopener noreffer ">Anthropic</a>, Claude is incredibly smart and can understand and communicate with humans in very natural, human-like ways.</p>
<p>What makes Claude so special is the way it has been trained. The folks at Anthropic fed Claude a massive amount of data, which allows it to truly grasp how we humans speak and write. So whether you&rsquo;re chatting with Claude casually or asking it to tackle some complex task, it can handle it all with impressive skill.</p>]]></description></item><item><title>Empowering Go: unveiling the synergy of AI and Q&amp;A pipelines</title><link>https://simonevellei.com/en/empowering-go-unveiling-the-synergy-of-ai-and-qa-pipelines/</link><pubDate>Thu, 16 Nov 2023 08:24:42 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/empowering-go-unveiling-the-synergy-of-ai-and-qa-pipelines/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/lingoose002.png" referrerpolicy="no-referrer">
            </div><p>In the realm of artificial intelligence and machine learning, efficient similarity search is a critical component for tasks ranging from recommendation systems to image recognition. In this blog post, we&rsquo;ll explore the implementation of vector similarity search in Go, utilizing <a href="https://github.com/henomis/lingoose" target="_blank" rel="noopener noreffer ">LinGoose</a> framework for indexing and querying vectors in a <a href="https://qdrant.tech/" target="_blank" rel="noopener noreffer ">Qdrant</a> database.</p>
<h2 id="understanding-vector-similarity-search">Understanding Vector Similarity Search</h2>
<p>Vector similarity search involves finding vectors in a dataset that are most similar to a query vector. This is fundamental in various AI applications where matching or ranking similar items is required. Qdrant, a vector database, provides a robust solution for such searches.</p>]]></description></item><item><title>Leveraging Go and Redis for Efficient Retrieval Augmented Generation</title><link>https://simonevellei.com/en/leveraging-go-and-redis-for-efficient-retrieval-augmented-generation/</link><pubDate>Sun, 05 Nov 2023 17:06:47 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/leveraging-go-and-redis-for-efficient-retrieval-augmented-generation/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/lingoose001.png" referrerpolicy="no-referrer">
            </div><h2 id="introduction">Introduction</h2>
<p>Artificial Intelligence has transformed the way we handle data, and one crucial aspect of AI is similarity search. Whether it&rsquo;s for image recognition, recommendation systems, or natural language processing, finding similar data points quickly and accurately is a common challenge. In this blog post, we will explore a Go code snippet that showcases how to perform efficient vector similarity search using Redis and the <a href="https://github.com/henomis/lingoose" target="_blank" rel="noopener noreffer ">Lingoose</a> Go framework, catering to tech-savvy readers interested in both Go programming and AI.</p>]]></description></item><item><title>The Bletchley Declaration</title><link>https://simonevellei.com/en/la-dichiarazione-di-bletchley/</link><pubDate>Fri, 03 Nov 2023 23:47:12 +0100</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/la-dichiarazione-di-bletchley/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/bletchley.jpg" referrerpolicy="no-referrer">
            </div><div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>This post was originally written in Italian and translated using AI. If you notice any translation errors or unclear passages, please let me know.</p>
<p><a href="/la-dichiarazione-di-bletchley/" rel="">ðŸ‡®ðŸ‡¹ Read the original post in Italian</a></p>
</div>
        </div>
    </div>
<p>During the Second World War, the German army dominated Europe thanks in part to the cryptographic technology used in communications: the Enigma machine. To be able to decipher its codes, the British relied on a group of mathematicians, physicists, and linguists who worked in a secret location, <strong>Bletchley Park</strong>, in England. Their work was a true scientific revolution, a fundamental turning point for the Alliesâ€™ victory.</p>]]></description></item><item><title>Italy's Progress and Challenges in Achieving Digital Transformation</title><link>https://simonevellei.com/en/italys-progress-and-challenges-in-achieving-digital-transformation/</link><pubDate>Thu, 05 Oct 2023 09:36:45 +0200</pubDate><author>Simone Vellei</author><guid>https://simonevellei.com/en/italys-progress-and-challenges-in-achieving-digital-transformation/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/europe001.jpeg" referrerpolicy="no-referrer">
            </div><p>Italy has been making significant strides towards achieving the <a href="https://commission.europa.eu/strategy-and-policy/priorities-2019-2024/europe-fit-digital-age/europes-digital-decade-digital-targets-2030_en" target="_blank" rel="noopener noreffer ">Digital Decade</a> targets and embracing digital transformation. While progress has been made in certain areas, there are still challenges that need to be addressed. In this blog post, we will explore Italy&rsquo;s advancements in digital infrastructure, the digitalization of businesses, and the need for further efforts in updating advanced digital technologies and digitalizing public services.</p>
<h3 id="digital-infrastructure">Digital Infrastructure</h3>
<p>Italy has shown progress in digital infrastructure, with a significant boost in investment through its Recovery and Resilience Plan (RRP). However, when it comes to fixed very high-capacity network (VHCN), Italy still lags behind the EU average, with only 54% of households having access compared to 73% in the EU. Despite a 10 percentage point increase between 2021 and 2022, there is still room for improvement in this area.</p>]]></description></item></channel></rss>