<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>openai on Simone Vellei Blog</title>
    <link>https://simonevellei.com/blog/tags/openai/</link>
    <description>Recent content in openai on Simone Vellei Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Nov 2023 08:24:42 +0100</lastBuildDate><atom:link href="https://simonevellei.com/blog/tags/openai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Empowering Go: unveiling the synergy of AI and Q&amp;A pipelines</title>
      <link>https://simonevellei.com/blog/posts/empowering-go-unveiling-the-synergy-of-ai-and-qa-pipelines/</link>
      <pubDate>Thu, 16 Nov 2023 08:24:42 +0100</pubDate>
      
      <guid>https://simonevellei.com/blog/posts/empowering-go-unveiling-the-synergy-of-ai-and-qa-pipelines/</guid>
      <description>In the realm of artificial intelligence and machine learning, efficient similarity search is a critical component for tasks ranging from recommendation systems to image recognition. In this blog post, we&amp;rsquo;ll explore the implementation of vector similarity search in Go, utilizing LinGoose framework for indexing and querying vectors in a Qdrant database.
Understanding Vector Similarity Search Vector similarity search involves finding vectors in a dataset that are most similar to a query vector.</description>
    </item>
    
    <item>
      <title>Leveraging Go and Redis for Efficient Retrieval Augmented Generation</title>
      <link>https://simonevellei.com/blog/posts/leveraging-go-and-redis-for-efficient-retrieval-augmented-generation/</link>
      <pubDate>Sun, 05 Nov 2023 17:06:47 +0100</pubDate>
      
      <guid>https://simonevellei.com/blog/posts/leveraging-go-and-redis-for-efficient-retrieval-augmented-generation/</guid>
      <description>Introduction Artificial Intelligence has transformed the way we handle data, and one crucial aspect of AI is similarity search. Whether it&amp;rsquo;s for image recognition, recommendation systems, or natural language processing, finding similar data points quickly and accurately is a common challenge. In this blog post, we will explore a Go code snippet that showcases how to perform efficient vector similarity search using Redis and the Lingoose Go framework, catering to tech-savvy readers interested in both Go programming and AI.</description>
    </item>
    
  </channel>
</rss>
